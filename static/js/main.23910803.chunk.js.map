{"version":3,"sources":["index.js"],"names":["Square","className","onClick","props","value","this","React","Component","Board","state","Array","fill","nextPerson","i","slice","calculateWinner","setState","status","winner","renderSquare","Game","line","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"4LAIMA,G,uLACO,IAAD,OACJ,OACI,4BACIC,UAAU,SACVC,QAAS,kBAAM,EAAKC,MAAMD,WAC1BE,MAAOC,KAAKF,MAAMC,OAEjBC,KAAKF,MAAMC,W,GARPE,IAAMC,YAerBC,E,YACH,WAAYL,GAAO,IAAD,8BACd,4CAAMA,KACDM,MAAM,CACPL,MAAMM,MAAM,GAAGC,KAAK,MACpBC,YAAY,GAJF,E,qEAOVC,GACJ,IAAMT,EAAQC,KAAKI,MAAML,MAAMU,QAC3BC,EAAgBX,IAAUA,EAAMS,KAGpCT,EAAMS,GAAKR,KAAKI,MAAMG,WAAa,IAAM,IACzCP,KAAKW,SAAS,CAACZ,MAAMA,EAAOQ,YAAYP,KAAKI,MAAMG,gB,mCAE1CC,GAAG,IAAD,OACX,OACI,kBAACb,EAAD,CAAQE,QAAS,WAAK,EAAKA,QAAQW,IAAKT,MAAOC,KAAKI,MAAML,MAAMS,O,+BAInE,IACII,EADEC,EAASH,EAAgBV,KAAKI,MAAML,OAO1C,OAJIa,EADAC,EACS,WAAaA,EAEb,iBAAmBb,KAAKI,MAAMG,WAAa,IAAM,KAG1D,6BACI,yBAAKX,UAAU,UAAUgB,GACzB,yBAAKhB,UAAU,SACX,yBAAKA,UAAU,aACVI,KAAKc,aAAa,GAClBd,KAAKc,aAAa,GAClBd,KAAKc,aAAa,IAEvB,yBAAKlB,UAAU,aACVI,KAAKc,aAAa,GAClBd,KAAKc,aAAa,GAClBd,KAAKc,aAAa,IAEvB,yBAAKlB,UAAU,aACVI,KAAKc,aAAa,GAClBd,KAAKc,aAAa,GAClBd,KAAKc,aAAa,U,GA9CvBb,IAAMC,WAuDpBa,E,iLAEE,OACI,6BACI,6BACI,kBAACZ,EAAD,Y,GALDF,IAAMC,WAiBzB,SAASQ,EAAgBX,GAWrB,IAVA,IAAMiB,EAAO,CACT,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEAR,EAAI,EAAGA,EAAIQ,EAAKC,OAAST,IAAI,CAAC,IAAD,cAClBQ,EAAKR,GADa,GAC3BU,EAD2B,KACzBC,EADyB,KACvBC,EADuB,KAElC,GAAIrB,EAAMmB,IAAMnB,EAAMmB,KAAOnB,EAAMoB,IAAMpB,EAAMmB,KAAOnB,EAAMqB,GACxD,OAAOrB,EAAMmB,GAGrB,OAAO,KAtBXG,IAASC,OACL,kBAACP,EAAD,MACAQ,SAASC,eAAe,U","file":"static/js/main.23910803.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nclass Square extends React.Component{\n    render(){\n        return(\n            <button\n                className=\"square\"\n                onClick={() => this.props.onClick()}\n                value={this.props.value}\n            >\n                {this.props.value}\n            </button>\n        )\n    }\n\n}\n\nclass Board extends React.Component{\n   constructor(props){\n       super(props);\n       this.state={\n           value:Array(9).fill(null),\n           nextPerson: true\n       }\n   }\n   onClick(i){\n       const value = this.state.value.slice();\n       if (calculateWinner(value) || value[i]) {\n           return;\n       }\n       value[i] = this.state.nextPerson ? 'X' : 'O';\n       this.setState({value:value, nextPerson:!this.state.nextPerson});\n   }\n   renderSquare(i){\n       return(\n           <Square onClick={()=>{this.onClick(i)}} value={this.state.value[i]}/>\n       )\n   }\n    render(){\n        const winner = calculateWinner(this.state.value);\n        let status;\n        if (winner) {\n            status = 'Winner: ' + winner;\n        } else {\n            status = 'Next player: ' + (this.state.nextPerson ? 'X' : 'O');\n        }\n        return(\n            <div>\n                <div className=\"status\">{status}</div>\n                <div className=\"board\">\n                    <div className=\"board-row\">\n                        {this.renderSquare(0)}\n                        {this.renderSquare(1)}\n                        {this.renderSquare(2)}\n                    </div>\n                    <div className=\"board-row\">\n                        {this.renderSquare(3)}\n                        {this.renderSquare(4)}\n                        {this.renderSquare(5)}\n                    </div>\n                    <div className=\"board-row\">\n                        {this.renderSquare(6)}\n                        {this.renderSquare(7)}\n                        {this.renderSquare(8)}\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nclass Game extends React.Component{\n    render(){\n        return(\n            <div>\n                <div>\n                    <Board/>\n                </div>\n            </div>\n        )\n    }\n}\n\nReactDOM.render(\n    <Game/>,\n    document.getElementById('root')\n);\n\nfunction calculateWinner(value){\n    const line = [\n        [0,1,2],\n        [3,4,5],\n        [6,7,8],\n        [0,3,6],\n        [1,4,7],\n        [2,5,8],\n        [0,4,8],\n        [2,4,6]\n    ];\n    for (let i = 0; i < line.length ; i++){\n        const [a,b,c] = line[i];\n        if (value[a] && value[a] === value[b] && value[a] === value[c]){\n            return value[a];\n        }\n    }\n    return null;\n}"],"sourceRoot":""}